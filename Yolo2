Yaml File:

train: data/train/images
val: data/valid/images

nc: 5
names: ['Helmet', 'Goggles', 'Jacket', 'Gloves', 'Footwear']




PY File:
import cv2
import math 
import yaml
from ultralytics import YOLO

# Load YAML configuration
with open("data.yaml", "r") as file:
    config = yaml.safe_load(file)

# Start webcam
cap = cv2.VideoCapture("videofile.mp4")
cap.set(3, 640)
cap.set(4, 480)

# Model
model = YOLO("yolov8n.pt")

# Object classes
classNames = config['names']

while True:
    success, img = cap.read()
    results = model(img, stream=True)

    # Coordinates
    for r in results:
        boxes = r.boxes

        for box in boxes:
            # Bounding box
            x1, y1, x2, y2 = box.xyxy[0]
            x1, y1, x2, y2 = int(x1), int(y1), int(x2), int(y2)  # Convert to int values

            # Put box in cam
            cv2.rectangle(img, (x1, y1), (x2, y2), (255, 0, 255), 3)

            # Confidence
            confidence = math.ceil((box.conf[0] * 100)) / 100
            print("Confidence --->", confidence)

            # Class name
            cls = int(box.cls[0])
            class_name = classNames[cls] if 0 <= cls < len(classNames) else "Unknown"
            print("Class name -->", class_name)

            # Object details
            org = [x1, y1]
            font = cv2.FONT_HERSHEY_SIMPLEX
            fontScale = 1
            color = (255, 0, 0)
            thickness = 2

            cv2.putText(img, class_name, org, font, fontScale, color, thickness)

    cv2.imshow('Video', img)
    if cv2.waitKey(1) == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
